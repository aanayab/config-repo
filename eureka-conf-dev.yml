eureka:
  server:
    waitTimeInMsWhenSyncEmpty: 0
    enableSelfPreservation: true
  datacenter: BOYERTECH
  environment: ${spring.profiles.active}
  client:
    registerWithEureka: true
    fetchRegistry: true
    initialInstanceInfoReplicationIntervalSeconds: 40
    healthcheck:
      enabled: true
    registryFetchIntervalSeconds: 5
    serviceUrl:
      defaultZone: ${EUREKA_URI:ENC(aV4p0exBi2ORJAeTudT3x/Kgw4JxTR+yJe2aM7LSGxDchENAx36YDKOCIsi+ofnJf5oGfakZYxqh06lHSetbm7PI0LKEzzHn535AGbZHqxnsrXFuN7MeYL+7MQAIKM7Ym50/9JVkMqMQBJQFrOunSVu8QMOrBYvldk3C8RjUB2E=)}
  instance:
    healthCheckUrlPath: ${server.servlet.context-path}${spring.mvc.servlet.path:}/actuator/health
    statusPageUrlPath: ${server.servlet.context-path}${spring.mvc.servlet.path:}/actuator/info
    homePageUrl: ${server.servlet.context-path}${spring.mvc.servlet.path:}/swagger-ui.html
    homePageUrlPath: ${server.servlet.context-path}${spring.mvc.servlet.path:}/swagger-ui.html
    #secure-health-check-url: ${server.servlet.context-path}${spring.mvc.servlet.path:}/actuator/health
#    hostname: ${server.servlet.context-path}${spring.mvc.servlet.path:}/swagger-ui.html
    preferIpAddress: true
    ip-address: ${IP:api-dev.boyertech.mx}
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 10
    metadata-map:
      startup: ${random.int}    #needed to trigger info and endpoint update after restart
      homePageUrl: http://${IP:api-dev.boyertech.mx}${server.servlet.context-path}${spring.mvc.servlet.path:}/swagger-ui.html
      managementUrl: http://${IP:api-dev.boyertech.mx}${server.servlet.context-path}${spring.mvc.servlet.path:}/actuator
      healthCheckUrl: http://${IP:api-dev.boyertech.mx}${server.servlet.context-path}${spring.mvc.servlet.path:}/actuator/health
      documentationUrl: http://${IP:api-dev.boyertech.mx}${server.servlet.context-path}${spring.mvc.servlet.path:}/swagger-ui.html
      version: ${info.application.version}
      management:
        context-path:  ${server.servlet.context-path}${spring.mvc.servlet.path:}/actuator
#        port: ${management.port}
    instanceId: ${spring.application.name}:${non-secure-port:${server.port}}:${spring.application.instance_id:${random.value}}
